<template>
<div>  
    <div class="modules-box">
        <p class="box-text">新建角色</p>
        <div class="box-content">
          <div style="border-bottom:1px solid #F6F6F6;padding-bottom:20px;margin-bottom:20px;">
           <h4> <span class="xuhuabordius"></span>基本信息</h4>
           <el-form :model="roleAddForm" ref="roleAddForm" label-width="100px" style="overflow:hidden;">
                <el-form-item label="角色名称" style="width:45%;display:inline-block;" prop="roleName" :rules="[{required: true, message: '此项不能为空'}]">
                    <el-input v-model="roleAddForm.roleName" placeholder="请输入角色名称"></el-input>
                </el-form-item>

                <!--<el-form-item label="角色编码" style="width:45%;display:inline-block;" prop="roleCode" :rules="[
			      { required: true, message: '此项不能为空'}]">
                    <el-input v-model="roleAddForm.roleCode" placeholder="请输入角色编码"></el-input>
                </el-form-item>

                <el-form-item label="排序号" style="width:45%;display:inline-block;" prop="roleOrder"
			    :rules="[
			      { required: true, message: '此项不能为空'},
			      { type: 'number', message: '此项必须为数字值'}
			    ]">
                    <el-input v-model.number="roleAddForm.roleOrder" placeholder="请输入排序号"></el-input>
                </el-form-item>-->
				
				<div style="width:43%;display:inline-block;margin:8px 0 0 2%;">
	        	   	<span>系统内置：</span>
		            <el-radio-group v-model="systemradio" @change="systemradioChange(systemradio)">
					    <el-radio :label="1">是</el-radio>
					    <el-radio :label="0">否</el-radio>
					</el-radio-group>
				</div>
				<div style="width:80%">
	        	   	<el-form-item label="角色描述:">
				        <el-input
						  type="textarea"
						  minlength="1"
						  maxlength="200"
						  :rows="4"
						  placeholder="字数限制在200字以内"
						  v-model="textarea">
						</el-input>
                    </el-form-item>
				</div>
				
            </el-form>
            
            
            <h4> <span class="xuhuabordius"></span>设置权限</h4>
            <div style='overflow:hidden;'>
            	
	            <div class="quanxianleft quanxian" v-loading='loading'>
	            	<div class="quanxiantitle">菜单数据权限</div>
	            	<el-tree
					  :data="treeMenu"
					  show-checkbox
					  :check-strictly="false"
					  :default-expanded-keys="[1]"
					  :default-checked-keys="[2]"
					  node-key="id"
					  ref="treeMenu"
					  :props="defaultPropsMenu">
					</el-tree>
	            </div>
	            
	            <!--<div class="quanxianright quanxian">
	            	<div class="quanxiantitle">行政数据权限</div>
	            	<el-tree
					  :data="treeBumen"
					  show-checkbox
					  :check-strictly="false"
					  node-key="id"
					  ref="treeBumen"
					  :default-expanded-keys="[1]"
					  :default-checked-keys="arrChecked"
					  :props="defaultPropsBumen">
					</el-tree>	
	            </div>            	-->
            </div>

           </div>
            <div style="text-align:center;"><el-button type="" @click="cancel">取消</el-button><el-button type="primary" @click="submit('roleAddForm')">确认</el-button></div>
            
        </div>
    </div>
</div>
	
		
</template>
<script>
import API from '@/api/api_authorization';
import APIBM from '@/api/api_organization';
  export default {
  	name: "role-add",
    data() {
      return {
      	user:{},
      	loading:true,
      	textarea:'',
      	treeMenu: [],
      	treeBumen:[],
        defaultPropsMenu: {
          children: 'children',
          label: 'label'
        },
        defaultPropsBumen: {
          children: 'children',
          label: 'name'
        },
      	roleAddForm:{
      		roleName:'',
      		roleOrder:'',
      		roleCode:''
      	},
      	systemradio:0,
      	arrChecked:[],
      	
      	checkedkeys:[],
      	checkednodes:{},
      	sectionIds:[],
      	menu:[]
		
      };
    },
    mounted(){
    	APIBM.orgationTree({}).then((res)=>{
    		this.treeBumen = res.data;
    	})
    	API.menuShow({}).then((res)=>{
    		this.treeMenu = res.data;
    		this.loading = false;
    	})
    	
    	this.user = JSON.parse(sessionStorage.getItem('user')).user;
    },
    methods: {
//  	init(){
//	        API.userList({search:this.search,level:0,secId:3,pageSize:this.params.pageSize,pageNum:this.params.page}).then((res)=>{
//	            this.dateList = res.rows;
//	            this.total = res.total;
//	        })
//	    },
	    
	    setCheckedKeys(arr){
	    	this.$refs.treeBumen.setCheckedKeys(arr);
	    },
	    cancel(){
	    	this.$router.push('/role');
	    },
	    submit(roleAddForm) {
	    	this.$refs[roleAddForm].validate((valid) => {
	    		if (valid) {	
//					this.sectionIds=this.$refs.treeBumen.getCheckedKeys().join('-');
					this.menu= this.$refs.treeMenu.getHalfCheckedKeys().join('-')+','+this.$refs.treeMenu.getCheckedKeys().join('-');
			    	let promise={
			    		vname:this.roleAddForm.roleName,
			    		vdescription:this.textarea,
//			    		vcode:this.roleAddForm.roleCode,
//			    		vsort:this.roleAddForm.roleOrder,
			    		vstatus:0,//代表正常
			    		bisystem:this.systemradio,
//			    		sectionIds:this.sectionIds,
			    		menuIds:this.menu,
			    		userId:this.user.userid
			        }
			    	console.log(promise);
			    	API.roleCreate(promise).then((res)=>{
			            console.log(res);
			            if(res.code==1){
			            	this.$router.push('/role');
				            this.$message({
					          title: '操作提示',
					          message: '添加成功', 
					          type: 'success',
					        });
			            }else{
			            	this.$message({
					          title: '操作提示',
					          message: res.message, 
					          type: 'warning',
					        });
			            }  
			            
			        })
			    }
	    		
	    	})

	    },
	    systemradioChange(value){
	    	this.systemradio = value
//	    	console.log(value)
	    },
	    
	    
	    
	    
	    
	    
//	    checkchange(data,checked,checkedchildren){
//	    	if(checked){
////	    		this.sectionIds = this.$refs.treeBumen.getCheckedKeys();
////	    		this.getCheckedInfo(data.id)
////				console.log(this.sectionIds);
//	    	}else{
////	    		this.getCheckedInfoCancel(data.id)
//	    	}
//	    },
//	    
//	    dedupe(array){
//		   return Array.from(new Set(array));
//		},
		
		
//		getCheckedInfoCancel(id){
//	    	this.checkedkeys = this.$refs.treeBumen.getCheckedKeys();	
//	    	this.checkednodes = this.$refs.treeBumen.getNode(id);
//	    	this.arrChecked.push(id);
//	    	if(this.checkednodes.level==4){
//	    		this.arrChecked.push(this.checkednodes.childNodes.key)
//	    		this.arrChecked.push(this.checkednodes.childNodes.childNodes.key)
//	    		this.arrChecked.push(this.checkednodes.childNodes.childNodes.childNodes.key)
//	    		this.arrChecked = this.dedupe(this.arrChecked) 
//	    		console.log(this.arrChecked);
////	    		this.checkednodes.parent.parent.parent
////				this.setCheckedKeys(this.arrChecked);
//				this.$refs.treeBumen.setCheckedKeys(this.arrChecked);
//	    	}else if(this.checkednodes.level==3){
//	    		this.arrChecked.push(this.checkednodes.childNodes.key)
//	    		this.arrChecked.push(this.checkednodes.childNodes.childNodes.key)
//	    		this.arrChecked = this.dedupe(this.arrChecked) 
//	    		console.log(this.arrChecked);
//				this.$refs.treeBumen.setCheckedKeys(this.arrChecked);
//	    	}else if(this.checkednodes.level==2){
//	    		this.arrChecked.push(this.checkednodes.childNodes.key)
//	    		
//	    		this.arrChecked = this.dedupe(this.arrChecked) 
//	    		console.log(this.arrChecked);
//				this.$refs.treeBumen.setCheckedKeys(this.arrChecked);
//	    	}
//
//	    },
//		
//	    getCheckedInfo(id){
//	    	this.checkedkeys = this.$refs.treeBumen.getCheckedKeys();	
//	    	this.checkednodes = this.$refs.treeBumen.getNode(id);
//	    	
//	    	console.log(this.$refs.treeBumen.getNode(id))
//	    	this.arrChecked.push(id);
//	    	if(this.checkednodes.level==4){
//	    		this.arrChecked.push(this.checkednodes.parent.key)
//	    		this.arrChecked.push(this.checkednodes.parent.parent.key)
//	    		this.arrChecked.push(this.checkednodes.parent.parent.parent.key)
//	    		this.arrChecked = this.dedupe(this.arrChecked) 
//	    		console.log(this.arrChecked);
////	    		this.checkednodes.parent.parent.parent
////				this.setCheckedKeys(this.arrChecked);
//				this.$refs.treeBumen.setCheckedKeys(this.arrChecked);
//	    	}else if(this.checkednodes.level==3){
//	    		this.arrChecked.push(this.checkednodes.parent.key)
//	    		this.arrChecked.push(this.checkednodes.parent.parent.key)
//	    		this.arrChecked = this.dedupe(this.arrChecked) 
//	    		console.log(this.arrChecked);
//				this.$refs.treeBumen.setCheckedKeys(this.arrChecked);
//	    	}else if(this.checkednodes.level==2){
//	    		this.arrChecked.push(this.checkednodes.parent.key)
//	    		
//	    		this.arrChecked = this.dedupe(this.arrChecked) 
//	    		console.log(this.arrChecked);
//				this.$refs.treeBumen.setCheckedKeys(this.arrChecked);
//	    	}
//
//	    },
	    
    }
    
    
  };
</script>
<style scoped  lang='scss'>
 $color:#942987;
 h4{margin:15px 0;padding-left:10px;}
 .xuhuabordius{margin:0 15px 0 0;display:inline-block;border-radius:50%;width:10px;height:10px;background:#942987;box-shadow:0 0 1px 4px #D6A3D0;}
.quanxian{min-height:400px;float:left;border:1px solid #eee;border-radius:5px;width:100%;margin-left:20px;}
.quanxiantitle{color:#666;font-size:14px;height:45px;line-height:45px;padding:0 10px;background:#F6F6F6;}
.modules-box{
    border-radius: 5px;
    border-top:2px solid $color;
    background-color:#fff;
    .box-text{
        border-bottom:1px solid #ddd;
        margin:0px;
        line-height:35px;
        text-indent:20px;
    }
    .box-content{
        padding:10px;
        .title-box{
            background-color: #fff;
            border-radius: 5px;
            border: 1px solid #ddd;
            border-left: 2px solid $color;
            margin-bottom: 10px;
        }
    }
    
}
</style>