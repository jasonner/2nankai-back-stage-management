<template>
  <div>
    <el-row style="display: flex;background:#fff">
      <el-col style="flex: auto">
        <div class="modules-box">
          <p class="box-text">通知公告</p>
          <div class="box-content" v-for="item in msgArr" @click="showMSG(item.id,item.msgId)" >
           <span @click.stop="deleteMsg(item.msgId)"   style="position: absolute;top:10px; color: #942987; font-size:12px;right: 10px">X</span>
            <div style="font-size: 16px;font-weight: 600">
              {{item.title}}
            </div>
            <div id="html" v-html="item.content"></div>
            <div>
            </div>
        </div>
        </div>
      </el-col>
      <el-col style="flex: auto">
        <div class="modules-box">
          <p class="box-text">新闻资讯</p>
          <div class="box-content" v-for="item in newArr">
            <span @click.stop="deleteMsg(item.msgId)"  style="position: absolute;top:10px; color: #942987; font-size:12px;right: 10px">X</span>
            <div style="font-size: 16px;font-weight: 600">
              {{item.title}}
            </div>
            <div v-html="item.content"></div>
        </div>
        </div>
      </el-col>
      <el-col style="flex: auto">
        <div class="modules-box">
          <p class="box-text">待办事项</p>
          <div class="box-content"  @click="showDetail()" v-for="item in waitMsgArr">
            <div style="font-size: 16px;font-weight: 600">
              {{item.title}}
            </div>
            <div v-html="item.content"></div>
        </div>
        </div>
      </el-col>
	</el-row>

<div class="modules-box">
	<p class="box-text">系统跳转</p>
	<ul class="tiaozhuan_ul">
		<li><div class="li_radio"><i class="iconfont icon-shiwu"></i></div><p>预约点餐</p></li>
		<li><div class="li_radio"><i class="iconfont icon-renyuanxiaozu"></i></div><p>导师管理</p></li>
		<li><div class="li_radio purpor"><i class="iconfont icon-bianji1"></i></div><p>开发中...</p></li>
	</ul>

</div>

<div class="modules-box role" v-if="user.utypeid!=0">
	<p class="box-text">关系表格</p>
	<!--关系表格-->
		<el-table
			  :data="relationList"
			  border
			  style="width: 97%;margin:0 auto;">
			  <el-table-column
			    label="序号"
			    width="70"
			  >
			  <template slot-scope="scope">{{scope.$index+1}}</template>

			  </el-table-column>
			  <el-table-column
			    prop="username"
			    label="姓名"
			    >
			  </el-table-column>
			  <el-table-column
			    label="用户类型"
			  >
			    <template slot-scope="scope">
			    	<span>教师</span>
			    </template>
			  </el-table-column>
			  <el-table-column
			    prop="phone"
			    :formatter="formatPhone"
			    label="手机号码">

			  </el-table-column>
			  <el-table-column
			    prop="email"
			    :formatter="formatEmail"
			    label="邮箱号码">
			  </el-table-column>
    </el-table>
</div>
    <!--查看弹层-->
    <el-dialog title="详情" style="text-align: center" :visible.sync="dialogLookVisible" top="20vh">
      <div class="msg-row-text" v-for="item in detail " style="text-align: left;padding-left: 20px">
          <div> 标题 : {{item.title}}</div>
          <div><span v-html="item.content"></span></div>
          <div><span>发送时间</span>: {{item.cTime}}</div>
          <div><span>发送人</span>: {{ item.username}}</div>
      </div>
    </el-dialog>
<div class="modules-box">
  		<p class="box-text">日志更新信息</p>
    	<div  v-loading="loadingUpdate" v-bind:style="{height:height,padding:'20px',position:'relative',overflow:'hidden'}">
  				<div v-html="logMsg"></div>
  				<div v-if="openUpdateLogString" style="height:50px;width:100%;position:absolute;bottom:0;background:#fff;"></div>
  				<span v-if="openUpdateLogString" style="position:absolute;bottom:10px;left:49%;cursor:pointer;font-size:12px;color:#999;" @click="openUpdateLog">点击查看全部</span>
  		</div>
</div>
	<!--<div class="modules-box" style="margin-top:15px;">
  		<p class="box-text">学生平均成绩波动统计</p>
  		<div class="box-content">
  			<div style="width:98%;">
  				<x-chart :id="id" :option="option"></x-chart>
  			</div>

		</div>
  	</div>-->
  </div>
</template>

<script>
import {getCookie} from '@/unit/unit.js';
import API from '@/api/api_user';
import MSGAPI from '@/api/api_news';
import APILOG from '@/api/api_log';
import tableList from '@/module/tableList.vue';
import MyButton from '@/module/MyButton.vue';
import XChart from '@/module/charts/line.vue';
import options from '@/assets/line-chart';
export default {
	data () {
		let option = options.bar
	    return {
        dialogLookVisible: false,
	    	id: 'test',
     		option: option,
     		user: {},
     		loadingUpdate:true,
     		openUpdateLogString:false,
     		height:'500px',
     		user:{},
	      relationList:[],
	      logMsg: '',
	      logMsg:'',
	      logMsg:'暂无信息',
        detail:[{
          content:'',
          title:'',
        }],
        msgArr: [
          {
            title: '',
            content: ''
          }
        ],
        newArr: [
          {
            title: '带辅助性文字介绍',
            content: '这是一句绕口令：黑灰化肥会挥发发灰黑化肥挥发；灰黑化肥会挥发发黑灰化肥发挥。 黑灰化肥会挥发发灰黑化肥黑灰挥发化为灰……'
          }
        ],
        waitMsgArr:[
          {
            title: '待办主题',
            content: ''
          }
        ],
	    }
    },
    components:{
      tableList,
      MyButton,
      XChart
    },
    mounted(){
    	this.user = JSON.parse(sessionStorage.getItem('user')).user;
        // this.init();
      this.UnreadMsg();
      this.getBacklog();
      API.relationList({}).then((res)=>{

        	let arr=[];
        	if(res.data.section){
        		res.data.section.forEach(item=>{
	        		arr.push(item);
	        	})
        	}
        	if(res.data.skzinfo){
        		res.data.skzinfo.forEach(item=>{
	        		arr.push(item);
	        	})
        	}
          this.relationList = arr;

        })
      APILOG.LogmsgShow({}).then((res)=>{
      	  this.loadingUpdate = false;
	    		if(res.code==1){
	    			this.logMsg = res.data[0].content;

	    			if(res.data[0].content.length>500){
	    				this.openUpdateLogString = true;
	    				this.height = '500px';
	    			}else{
	    				this.openUpdateLogString = false;
	    				this.height = 'auto';
	    			}

		      }
	      })

    },
    methods:{
	    	openUpdateLog(){
	    		this.height = 'auto';
	    		this.openUpdateLogString = false;
	    	},
	     	formatEmail(row, column){
	     		if(row.eisopen){
                return row.phone;
           }else{
                return '******';
           }
	      },
	      formatPhone(row, column){
	     		if(row.pisopen){
                return row.email;
           }else{
                return '******';
           }
	      },
        //获取通知公告
        UnreadMsg(){
        let promise1 = {
          userId: this.user.userid,
          pageNum: '1',
          pageSize: '3',
          typeId: '1',//
          isRead: '0',//已读or未读状态
        }
        MSGAPI.getMyAllMsg(promise1).then( (res) => {//消息
          console.log(res);
          let Arr = [];
          if(res.data && res.code === 1){
            res.data.forEach((item)=>{
              let obj = {
                title: item.title,
                content: item.content,
                id: item.id,
                msgId: item.msgId
              }
              console.log(item);
              Arr.push(obj);
            })
            this.msgArr = Arr;
          }else {
            this.msgUnread = '';
          }
        })
      },
        //获取待办事项
        getBacklog() {
        let promise = {
          pageNum: '1',
          pageSize: '10',
          matterstatu: '1'
        }
        this.loading2 = true;
        this.changeState = false;
        console.log(promise)
         MSGAPI.matterList(promise).then((res) => {
          this.loading2 = false;
          console.log(res);
          let Arr = [];
          if(res.data && res.data.length>0){
            res.data.forEach((item)=>{
              let obj = {
                title: '待办主题',
                content: item.matterTitle
              }
              Arr.push(obj);
            })
          }
          this.waitMsgArr = Arr;
        })
      },
        //时间戳转日期
        getLocalTime(nS) {
          var date = new Date(nS*1);//如果date为13位不需要乘1000
          var Y = date.getFullYear() + '-';
          var M = (date.getMonth()+1 < 10 ? '0'+(date.getMonth()+1) : date.getMonth()+1) + '-';
          var D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate()) + ' ';
          var h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';
          var m = (date.getMinutes() <10 ? '0' + date.getMinutes() : date.getMinutes()) + ':';
          var s = (date.getSeconds() <10 ? '0' + date.getSeconds() : date.getSeconds());
          return Y+M+D+h+m+s;
        },
        //展示详情
        showMSG(msgid,msgobjid){
	    	  let promise = {
            msgid: msgid,
            msgobjid: msgobjid
          }
          MSGAPI.selectMsg(promise).then((res)=>{
            console.log(res);
            let arr = [];
            res.data.forEach((item)=>{
              let obj = {
                content: item.content,
                cTime: this.getLocalTime(item.cTime),
                title: item.title,
                username: item.username
              }
              console.log(obj);
              arr.push(obj);
            });
            this.detail = arr;
          })
          this.dialogLookVisible = true;
        },
        //删除消息和待办事项
        deleteMsg(index){
	    	  console.log(index);
          this.$confirm('您确定要删除吗？', '删除提示', {
            confirmButtonText: '确定',
            cancelButtonText: '取消',
            center: true,
            type: 'warning'
          }).then(() => {
            let promise = {
              msgobjids: index
            };
            MSGAPI.endMsgDeleteall(promise).then( (res) =>{
              console.log(res);
              let s = this.msgArr.findIndex(d => d.id === index);
              this.msgArr.splice(s, 1);
            })
            this.$message({
              type: 'success',
              message: '删除成功!'
            });
          }).catch(() => {
            this.$message({
              type: 'info',
              message: '已取消删除'
            });
          });
        },
        //查看详情
        showDetail(){
	     	this.dialogLookVisible = true;
      }
    }//method方法结束
}
</script>

<!-- Add "scoped" attribute to limit CSS to this component only -->
<style lang='scss'>
$color:#942987;

.tiaozhuan_ul{overflow:hidden;padding:10px 0;}
.tiaozhuan_ul li{list-style:none;float:left;text-align:center;margin:10px;}
.tiaozhuan_ul li .li_radio{width:70px;height:70px;line-height:70px;text-align:center;border-radius:50%;background:#942987;}
.tiaozhuan_ul li .purpor{background:#ddd;}
.tiaozhuan_ul li i{font-size:26px;color:#fff;}
.modules-box{
	border-radius: 5px;
	border-top:2px solid $color;
	background-color:#fff;
	margin-bottom:20px;
	.box-text{
		border-bottom:1px solid #ddd;
		margin:0px;
		line-height:35px;
		text-indent:20px;
	}
	.box-content{
		padding:10px;
    border: 1px solid #dfdfdf;
    border-left: 2px solid $color;
    border-radius: 5px;
    margin-left: 10px;
    height: 80px;
    margin-top: 10px;
    box-shadow:0 4px 4px #eee;
    position: relative;
    img{
      width: 40px !important;
      height: 40px !important;
      float: left !important;
      margin-right: 10px;
    }
		.title-box{
			background-color: #fff;
			border-radius: 5px;
			border: 1px solid #ddd;
			border-left: 2px solid $color;
			margin-bottom: 10px;
		}
		.person{
			text-align:center;
			color:#666;
			img{
				border:5px solid rgba(0,0,0,0.2);
				border-radius:100%;
				width:100px;
				height:100px;
				display:inline-block;
				margin:8px 0px;
			}
			p{
				line-height:1.7;
				margin:0;
			}
		}
	}
}

</style>
