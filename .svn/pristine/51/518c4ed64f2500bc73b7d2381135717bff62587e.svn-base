<template>
  <div class="content-box"  v-loading="loading">

  </div>
</template>

<script>
  import API from '@/api/api_subscriber';
  import bus from '@/assets/componentBridge';
  export default {
    name:'addMenu',
    data() {
      return {
        loading: true,
        tableData: { },
        menuListShow: false,
        menuTitle: '',
        menuIds: '',
        getUserSelectState: '',//搜索内容
      }
    },
    mounted(){
      this.menuListInit();
    },
    methods: {
      menuListInit(){
        API.menuListShow().then((res)=>{
          console.log(res.data);
          if(res.code===1){
            this.loading = false;
          }
          this.tableData = res.data[0];
          this.menuTitle =  this.tableData.label;
        })
      },
      //调用列表
      callMethod (node,store) {
        console.log('列表渲染');
        this.menuTitle = node.data.label;
        console.log(this.tableData);
        console.log(node.data);
       this.tableData = node.data;
       this.menuIds =  ' ';
       this.menuListShow = true;
      },
      //添加
      handleAdd(node){
        this.$emit('update:showDlg',true);
        console.log(node);
        bus.$emit('addmenuData',node);
      },
      //编辑
      handleEdit(node){
        this.$emit('update:showDlg',true);
        this.$router.push('/editMenu');
        bus.$emit('menuData',node);
      },
      //删除
      handleDelet() {
        console.log('删除');
        this.$confirm('确认要删除此菜单及其所有子菜单吗？', '提示', {
          confirmButtonText: '确定',
          cancelButtonText: '取消',
          type: 'warning'
        }).then(() => {
          console.log(this.tableData);
          let arr = [];
          if(this.tableData.children && this.tableData.children.length>0){
            console.log(this.tableData.children);
            this.tableData.children.forEach(item => {
              console.log(item);
              if(item.children && this.tableData.children.length>0){
                item.children.forEach(tem => {
                  if(tem.children && tem.children.length>0){
                    tem.children.forEach( em => {
                      console.log(em);
                      arr.push(em.id);
                      if(em.children && em.children.length>0){
                        em.children.forEach( m =>{
                          console.log(m);
                          arr.push(m.id);
                        })
                      }
                    })
                  }
                  console.log(tem.id);
                  arr.push(tem.id);
                })
              }
              console.log(item.id);
              arr.push(item.id);
            })
          }
          arr.push(this.tableData.id);
          console.log(arr);
          let sectionIds = '';
          arr.forEach( item =>{
            sectionIds += item + '-'
          })
          let promise = {
            menuIds: sectionIds
          }
          console.log(promise);
          API.menuListdel(promise).then((res)=>{
            console.log(res.data);
            if(res.code === 1){
              this.$message({
                type: 'success',
                message: '删除成功!'
              });
            }
          }).then( ()=>{
            this.menuListInit();
          });
        }).catch(() => {
          this.$message({
            type: 'info',
            message: '已取消删除'
          });
        });
      }
    }
  }
</script>

<style scoped lang="scss">
  .content-box{
    width: 100%;
    height: 100%;
    background: #fff;
    box-sizing: border-box;
    .menuMsg{
      border: 1px solid #dfdfdf;
      border-radius: 5px;
      .menuMsg-title{
        background: #efefef;
        padding-left: 20px;
      }
    }
  }
</style>
