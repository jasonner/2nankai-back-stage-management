<template>
    <div class="content-box">
      <div v-if="!sendRecordFlage">
        <div class="content-title">我的消息</div>
        <!--Tab消息切换-->
        <el-tabs v-model="activeName" type="border-card" @tab-click="handleClick(activeName)">
          <el-tab-pane v-for="item in tabMapOptions" :label="item.label" :key="item.key" :name="item.key">
            <keep-alive>
              <!--<tab-pane v-if="activeName==item.key" :type="item.key" @create="showCreatedTimes"/>-->
              <!--消息筛选-->
              <div class="msgSelect">
                <el-select v-model="msgStateValue" @visible-change="msgStateChange(msgStateValue)"  style="width: 120px;" placeholder="消息状态">
                  <el-option
                    v-for="item in msgState"
                    :key="item.msgStateValue"
                    :label="item.msgStateLabel"
                    :value="item.msgStateValue">
                  </el-option>
                </el-select>
                <el-date-picker
                  v-model="value6"
                  type="datetimerange"
                  range-separator="至"
                  start-placeholder="开始日期"
                  end-placeholder="结束日期"
                  :default-time="['12:00:00']"
                  @change='TimeDateChange(value6)'
                  style="width: 358px;margin-left: 10px"
                >
                </el-date-picker>
                <el-button type="primary" style="margin-left: 10px" @click="queryMsg">查询</el-button>
                <el-select
                  v-model="value9"
                  multiple
                  filterable
                  remote
                  reserve-keyword
                  placeholder="请输入姓名进行搜索"
                  :remote-method="remoteMethod"
                  :loading="loading"
                  style="margin-left: 10px"
                >
                  <el-option
                    v-for="item in options4"
                    :key="item.value"
                    :label="item.label"
                    :value="item.value">
                  </el-option>
                </el-select>
                <el-button type="primary" style="margin-left: 10px" @click="searchName">搜索</el-button>
                <div style="float: right">
                    <el-button type="primary" @click="batchDeleting">批量删除</el-button>
                    <el-button type="primary" style="margin-left: 10px" @click="sendRecord">发送记录</el-button>
                </div>
                <!--发送列表-->
                <div>
                  <el-table
                    ref="multipleTable"
                    :data="tableData"
                    style="width: 100%;margin-top: 20px;text-align: left;border: 1px solid #dfdfdf;border-radius: 5px"
                    class="usertable"
                    @selection-change="handleSelectionChange">
                    <el-table-column
                      width="3"
                    >
                    </el-table-column>
                    <el-table-column
                      type="selection"
                      label="全选"
                      width="60"
                    >
                    </el-table-column>
                    <el-table-column
                      prop="msgIndex"
                      label="序号"
                      width="100"
                    >
                    </el-table-column>
                    <el-table-column
                      prop="username"
                      label="发送人"
                      sortable
                    >
                    </el-table-column>
                    <el-table-column
                      prop="msgData"
                      label="日期"
                      sortable
                    >
                    </el-table-column>
                    <el-table-column
                      prop="msgState"
                      label="状态"
                      sortable
                    >
                    </el-table-column>
                    <el-table-column
                      prop="MSGContent"
                      label="消息"
                      style="overflow: hidden"
                    >
                    </el-table-column>
                    <el-table-column label="操作">
                      <template slot-scope="scope">
                        <el-button
                          size="mini"
                          style="color: #862a7a;border: none; font-size:20px;padding: 0; margin-left: 10px"
                          class="iconfont icon-chakan"
                          @click="handleShow(scope.$index, scope.row)"></el-button>
                        <el-button
                          size="mini"
                          v-if="MsgReply"
                          class="iconfont icon-xiaoxi"
                          style="color: #862a7a;border: none;font-size:16px;padding: 0;margin-left: 10px"
                          @click="handleMsg(scope.$index, scope.row)"></el-button>
                        <el-button
                          size="mini"
                          class="iconfont icon-shanchu"
                          style="color: #862a7a; font-size:20px;border: none;padding: 0; margin-left: 10px"
                          @click="handleDelet(scope.$index, scope.row)"></el-button>
                      </template>
                    </el-table-column>
                  </el-table>
                </div>
                <!--分页-->
                <el-pagination
                  @size-change="handleSizeChange"
                  @current-change="handleCurrentChange"
                  :current-page="currentPage4"
                  :page-sizes="[100, 200, 300, 400]"
                  :page-size="100"
                  layout="total, sizes, prev, pager, next, jumper"
                  :total="400"
                  style="text-align: center;margin-top: 20px"
                >
                </el-pagination>
              </div>
            </keep-alive>
          </el-tab-pane>
        </el-tabs>
        <!--查看弹层-->
        <el-dialog title="查看详情" style="text-align: center" :visible.sync="dialogLookVisible" top="20vh">
          <div style="text-align: left;border-bottom: 1px solid #dfdfdf;padding-bottom: 20px;box-sizing: border-box">
            <p><span style="font-weight: 700">发送人</span>    :    {{viewTabList.username}}</p>
            <p>{{viewTabList.msgData}}</p>
            <p>{{viewTabList.MSGContent}}</p>
            <div>关联代办 <el-radio style="margin-left: 10px" v-model="radio" @change="radioChange(radio)" label="1">是</el-radio>
              <el-radio v-model="radio" @change="radioChange(radio)" label="2">否</el-radio></div>
          </div>
          <div style="margin-top: 20px">
            <el-button plain @click="viewPosition">取消</el-button>
            <el-button type="primary" @click="viewSure">确定</el-button>
          </div>
        </el-dialog>
        <!--消息回复-->
        <el-dialog title="消息回复" style="text-align: center" :visible.sync="dialogReplyVisible" top="20vh">
          <div class="msg-row-text">
            <el-input v-model="MsgTitlt" placeholder="消息主题"></el-input>
            <el-input
              type="textarea"
              :rows="2"
              placeholder="请输入内容"
              v-model="msgContent"
              style="margin-top: 20px;"
              class="msgContent"
            >
            </el-input>
            <div style="border-top: 1px solid #dfdfdf;padding-top: 20px;box-sizing: border-box">
              <el-button @click="msgReplyCancel">取消</el-button>
              <el-button type="primary" @click="msgReplySure">确认</el-button>
            </div>
          </div>
        </el-dialog>
      </div>
      <!--发送记录-->
      <send-record v-show="sendRecordFlage" @add-parent-total="sendRecord" ref="child"  :showDlg.sync= 'sendRecordFlage'></send-record>
    </div>
</template>

<script>
    import sendRecord from './sendRecord'
    export default {
      components: {sendRecord},
        name: "my-manage",
        data() {
        return {
          tabMapOptions: [
            { label: '消息', key: 'MSG' },
            { label: '通知', key: 'Inform' },
            { label: '公告', key: 'Notice' },
          ],
          createdTimes: 0,
          activeName: 'MSG',
          msgState: [{
            msgStateValue: '0',
            msgStateLabel: '已读'
          }, {
            msgStateValue: '1',
            msgStateLabel: '未读'
          }],
          msgStateValue: '',
          value6: '',
          options4: [],
          value9: [],
          list: [],
          loading: false,
          states: ["Alabama", "Alaska", "Arizona",
            "Arkansas", "California", "Colorado",
            "Connecticut", "Delaware", "Florida",
            "Georgia", "Hawaii", "Idaho", "Illinois",
            "Indiana", "Iowa", "Kansas", "Kentucky",
            "Louisiana", "Maine", "Maryland",
            "Massachusetts", "Michigan", "Minnesota",
            "Mississippi", "Missouri", "Montana",
            "Nebraska", "Nevada", "New Hampshire",
            "New Jersey", "New Mexico", "New York",
            "North Carolina", "North Dakota", "Ohio",
            "Oklahoma", "Oregon", "Pennsylvania",
            "Rhode Island", "South Carolina",
            "South Dakota", "Tennessee", "Texas",
            "Utah", "Vermont", "Virginia",
            "Washington", "West Virginia", "Wisconsin",
            "Wyoming"],
          tableData:[{
            msgIndex: '1',
            username: '吴杰',
            msgData: '2018-08-28',
            msgState: '已读',
            MSGContent: '值得有心能自奋，何愁他日不雄飞！！！'
          },
            {
              msgIndex: '2',
              username: '吴杰',
              msgData: '2018-08-30',
              msgState: '未读',
              MSGContent: '衣带渐宽终不悔，为伊消得人憔悴？？？'
            },
            {
              msgIndex: '3',
              username: '吴杰',
              msgData: '2018-08-29',
              msgState: '未读',
              MSGContent: '真正的大师常怀着一颗学徒的心，不要被骄傲遮蔽了双眼！！！'
            }],
          multipleSelection: [],//选择消息列表
          currentPage4: 4,
          dialogLookVisible: false,
          dialogReplyVisible: false,
          radio: '2',
          viewTabList: {
            username: '',
            msgData: '',
            MSGContent: ''
          },
          MsgTitlt: '',
          msgContent: '',
          MsgReply: true,
          sendRecordFlage: false,
        };
      },
      mounted() {
        this.list = this.states.map(item => {
          return { value: item, label: item };
        });
      },
      methods: {
          //Tab切换
        handleClick(val) {
          console.log(val);
          if(val == 'MSG'){
            this.MsgReply = true;
            //TODO  调用消息记录接口
          }else if(val == 'Inform'){
            this.MsgReply = false;
            //TODO  调用通知记录接口
          }else if(val == 'Notice') {
            this.MsgReply = false;
            //TODO  调用公告记录接口
          }
        },
          //消息状态筛选
        msgStateChange(val){
          console.log("消息状态筛选"+ val);
        },
        //时间段筛选
        TimeDateChange(val){
          console.log("时间段筛选"+val);
        },
        //查询
        queryMsg(){
          console.log("查询消息");
          //TODO   筛选用户信息
        },
        //按用户姓名搜索
        searchName(){
          console.log("按用户姓名搜索");
          //TODO  按用户姓名搜索
        },
         //搜索
        remoteMethod(query) {
          if (query !== '') {
            this.loading = true;
            setTimeout(() => {
              this.loading = false;
              this.options4 = this.list.filter(item => {
                return item.label.toLowerCase()
                  .indexOf(query.toLowerCase()) > -1;
              });
            }, 200);
          } else {
            this.options4 = [];
          }
        },
        //批量删除
        batchDeleting(){
          console.log("批量删除");
          console.log(this.multipleSelection );
          let  index = this.multipleSelection.length;
          if(this.multipleSelection && this.multipleSelection.length<1){
            this.$notify.error({
              title: '错误提示',
              message: '请选择消息列表'
            });
          }else if(this.multipleSelection && this.multipleSelection.length>0){
            this.$confirm('您确定要删除这'+ index +'条消息吗？', '删除提示', {
              confirmButtonText: '确定',
              cancelButtonText: '取消',
              center: true,
              type: 'warning'
            }).then(() => {
              //this.tableData.splice(index,1);
              // TODO  调用批量删除接口
              this.$message({
                type: 'success',
                message: '删除成功!'
              });
            }).catch(() => {
              this.$message({
                type: 'info',
                message: '已取消删除'
              });
            });
          }
        },
        //发送记录
        sendRecord(){
          console.log("发送记录");
          this.sendRecordFlage = true;
        },
        //全选
        handleSelectionChange(val) {
          console.log(val)
          this.multipleSelection = val;
        },
        //查看
        handleShow(index,val){
          console.log('查看');
          console.log(index,val);
          this.viewTabList = val;
          this.dialogLookVisible = true;
        },
        //消息
        handleMsg(index,val){
          console.log('消息发送');
          console.log(index,val);
          this.dialogReplyVisible = true;
        },
        //删除
        handleDelet(index,val){
          console.log("消息删除");
          console.log(index,val);
          //TODO 消息删除接口
          console.log(this.tableData);
          this.$confirm('您确定要删除这条消息吗？', '删除提示', {
            confirmButtonText: '确定',
            cancelButtonText: '取消',
            center: true,
            type: 'warning'
          }).then(() => {
            this.tableData.splice(index,1);
            this.$message({
              type: 'success',
              message: '删除成功!'
            });
          }).catch(() => {
            this.$message({
              type: 'info',
              message: '已取消删除'
            });
          });
        },
        //分页
        handleSizeChange(val) {
          console.log(`每页 ${val} 条`);
        },
        handleCurrentChange(val) {
          console.log(`当前页: ${val}`);
        },
        //关联代办单选
        radioChange(val){
          console.log('关联代办单选'+val);
        },
        //查看取消
        viewPosition(){
          this.dialogLookVisible = false;
        },
        //查看确定
        viewSure(){
          console.log("查看确定");
          console.log(this.radio);
          //TODO  关联代办;
        },
        //消息回复取消
        msgReplyCancel(){
          console.log("消息回复取消");
          this.dialogReplyVisible = false;
        },
        //消息回复确认
        msgReplySure(){
          console.log("消息回复确认");
          this.dialogReplyVisible = false;
        },
      }
    }
</script>
<style scoped lang="scss">
  .content-box{
        width: 100%;
        background:#efefef;
        .content-title{
          padding: 0 30px;
          box-sizing: border-box;
          font-weight: 600;
          height: 40px;
          line-height: 40px;
        }
        .tab-box{
          padding: 0 30px;
          box-sizing: border-box;
          border-top: 1px solid #dfdfdf;
        }
        .msgSelect{
          padding: 0 30px;
          box-sizing: border-box;
        }
        .msgContent textarea{
          min-height: 300px !important;
        }
      }
</style>
