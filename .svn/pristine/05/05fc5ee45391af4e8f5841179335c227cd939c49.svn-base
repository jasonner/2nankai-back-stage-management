<template>
  <div class="content-box">
    <el-container v-loading = "loading" v-if="!show">
      <el-aside width="240px" style="min-height:620px;margin-right:20px;" v-if="!show">
        <div class="aside-header" style="font-weight: 600">菜单列表</div>
        <el-input
          placeholder="请您输入部门进行搜索"
          v-model="filterText"
          style="width: 95%; border-top:1px solid #dfdfdf; border-bottom:1px solid #dfdfdf;padding: 10px 0"
        >
        </el-input>

        <el-tree
          class="filter-tree"
          :data="data2"
          :props="defaultProps"
          :highlight-current= true
          node-key="id"
          :default-expanded-keys="[1]"
          tooltip-effect="dark"
          :filter-node-method="filterNode"
          ref="tree2"
          :render-content="renderTree"
          style="margin-top: 10px"
        >
        </el-tree>
      </el-aside>

      <el-main>
        <menu-list style="line-height: 40px"  ref="child" :showDlg.sync= 'show' v-if="!show" @click="getNode" ></menu-list>
      </el-main>
    </el-container>
    <edit-menu v-show="show"   :showDlg.sync= 'show' ></edit-menu>
  </div>
</template>

<script>
  import API from '@/api/api_subscriber'
  import menuList from './component/menuList'
  import editMenu from './editMenu'
  import bus from '../../assets/componentBridge';
  export default {
    components: { menuList,editMenu },
    name: "index",
    data() {
      return {
        loading : true,
        input10: '',
        filterText: '',
        getmsg: {},
        show: false,
        data2:[
          {
            id: 0,
            core: '',
            Jurisdiction: 'admin',
            href: '',
            isShow: '',
            sort: '600',
            pid:0,
            moduleoOwnership: '核心模块',
            label: '菜单管理',
            children: []
          }],//栏目树列表
        defaultProps: {
          children: 'children',
          label: 'label'
        },
      };
    },
    mounted(){
      this.loading = false;
      API.menuListShow().then((res)=>{
        console.log(res.data);
        if(res.code === 1){
         // console.log(res.data);
          this.data2 = res.data;
          console.log('测试列表调用');
          console.log(this.data2)
        }
      })
    },
    watch: {
      filterText(val) {
        console.log(val)
        this.$refs.tree2.filter(val);
      }

    },
    methods: {
      filterNode(value, data) {
        if (!value) return true;
        return data.label.indexOf(value) !== -1;
      },
      renderTree(h, { node, data, store }){
        return (
          <span level={(()=>{return node.level})()} id={(()=>{return data.id})()} style="flex:1;display:flex;align-items:center;justify-content:space-between;font-size:14px;padding-right:8px;position:relative;">
          <span>
          <i class="icontree iconfont icon-wenjian" style="margin-right:.3em;"></i>
        { node.label }
      </span>
        <span class="tree-btns" style="position:absolute;left:0;top:-3px;">
          <el-button size="mini" type="text" on-click={ () => this.getNode(node,store) } style="padding:10px 90px;z-index:999;"></el-button>
          </span>
          </span>
      );
      },
      getNode(node,store){
        console.log(node.data);
        this.$refs.child.callMethod(node,store);
        bus.$emit('menuData',node);
      },
    },
  }
</script>

<style scoped lang='scss'>
  .el-aside {
    border-top-left-radius: 6px;
    border-top-right-radius: 6px;
    border-top:4px solid #942987;
    background-color: #fff;
    color: #333;
    margin-right: 40px;
    text-align: center;
    .aside-header{
      width: 100%;
      height: 47px;
      background: #fff;
      line-height: 47px;
      font-size: 14px;
      text-align: left;
      padding-left: 16px;
      box-sizing: border-box;
      color: #000;
    }
    .el-icon-search:before{
      position: absolute;
      left: 10px;
      top: 10px;
    }
    .el-icon-search input{
      padding-left: 30px !important;
    }
  }
  .el-main {
    border-top:4px solid #942987;
    border-top-left-radius: 6px;
    border-top-right-radius: 6px;
    background-color: #fff;
    color: #333;
    text-align: center;
    line-height: 160px;
  }

  .content-box{
    background: #F3F3F3;
  }



</style>

