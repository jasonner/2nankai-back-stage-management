<template>
  <div class="content-box"  v-loading="loading">
    <div
      style="
      text-align: left;
      border-bottom: 1px solid #dfdfdf;
      margin-top: -12px;
      margin-bottom: 20px;
      font-weight: 600;
    ">{{menuTitle}}</div>
    <!--刷新&新增-->
    <div  style="text-align: right;margin-bottom: 20px" >
      <el-button type="primary" style="padding: 10px" @click="handleAdd(tableData)">添加子菜单</el-button>
     <!-- <el-button type="primary" style="padding: 10px"  @click="handleEdit(tableData)">编辑</el-button>-->
      <el-button type="primary" style="padding: 10px" @click="handleDelet">删除</el-button>
    </div>
    <!--菜单信息-->
    <div class="menuMsg">
          <div class="menuMsg-title" style="text-align: left">菜单信息</div>
          <div style="display: flex;text-align: left;padding: 0 20px;box-sizing: border-box;" >
            <p style="flex: 1"><i class="el-icon-location" style="color: #6a005d"></i> 菜单名称  :  {{tableData.label}}</p>
            <p style="flex: 1"><i class="el-icon-location" style="color: #6a005d"></i> 菜单类型  : <span v-if="this.tableData.menutype === 0 ">菜单</span>  <span v-if="this.tableData.menutype === 1 ">权限</span></p>
            <!--<p style="flex: 1"><i class="el-icon-location" style="color: #6a005d"></i> 归属模块  :  {{tableData.moduleoOwnership}}</p>-->
          </div>
          <div style="display: flex;text-align: left;padding: 0 20px;box-sizing: border-box;">
            <p style="flex: 1"><i class="el-icon-location" style="color: #6a005d"></i> 链接（Href） :  {{tableData.linkHref}}</p>
            <p style="flex: 1"><i class="el-icon-location" style="color: #6a005d"></i> 目标  :   {{tableData.code}}</p>
          </div>
          <div style="display: flex;text-align: left;padding: 0 20px;box-sizing: border-box;">
            <p style="flex: 1"><i class="el-icon-location" style="color: #6a005d"></i> 权限标识  :  {{tableData.authMark}};</p>
            <p style="flex: 1"><i class="el-icon-location" style="color: #6a005d"></i> 可见  :  显示</p>
          </div>
    </div>
  </div>
</template>

<script>
  import API from '@/api/api_subscriber';
  import bus from '@/assets/componentBridge';
  export default {
    name:'addMenu',
    data() {
      return {
        loading: true,
        tableData: { },
        menuListShow: false,
        menuTitle: '',
        menuIds: '',
        getUserSelectState: '',//搜索内容
      }
    },
    mounted(){
      this.menuListInit();
    },
    methods: {
      menuListInit(){
        API.menuListShow().then((res)=>{
          console.log(res.data);
          if(res.code===1){
            this.loading = false;
          }
          this.tableData = res.data[0];
          this.menuTitle =  this.tableData.label;
        })
      },
      //调用列表
      callMethod (node,store) {
        console.log('列表渲染');
        this.menuTitle = node.data.label;
        console.log(this.tableData);
        console.log(node.data);
       this.tableData = node.data;
       this.menuIds =  ' ';
       this.menuListShow = true;
      },
      //添加
      handleAdd(node){
        this.$emit('update:showDlg',true);
        console.log(node);
        bus.$emit('addmenuData',node);
      },
      //编辑
      handleEdit(node){
        this.$emit('update:showDlg',true);
        this.$router.push('/editMenu');
        bus.$emit('menuData',node);
      },
      //删除
      handleDelet() {
        console.log('删除');
        this.$confirm('确认要删除此菜单及其所有子菜单吗？', '提示', {
          confirmButtonText: '确定',
          cancelButtonText: '取消',
          type: 'warning'
        }).then(() => {
          console.log(this.tableData);
          let arr = [];
          if(this.tableData.children && this.tableData.children.length>0){
            this.tableData.children.forEach(item => {
              item.children.forEach(tem => {
                console.log(tem.id);
                arr.push(tem.id);
              })
              console.log(item.id);
              arr.push(item.id);
            })
          }
          arr.push(this.tableData.id);
          console.log(arr);
          let sectionIds = '';
          arr.forEach( item =>{
            sectionIds += item + '-'
          })
          let promise = {
            menuIds: sectionIds
          }
          console.log(promise);
          API.menuListdel(promise).then((res)=>{
            console.log(res.data);
            if(res.code === 1){
              this.$message({
                type: 'success',
                message: '删除成功!'
              });
            }
          }).then( ()=>{
            this.menuListInit();
          });
        }).catch(() => {
          this.$message({
            type: 'info',
            message: '已取消删除'
          });
        });
      }
    }
  }
</script>

<style scoped lang="scss">
  .content-box{
    width: 100%;
    height: 100%;
    background: #fff;
    box-sizing: border-box;
    .menuMsg{
      border: 1px solid #dfdfdf;
      border-radius: 5px;
      .menuMsg-title{
        background: #efefef;
        padding-left: 20px;
      }
    }
  }
</style>
