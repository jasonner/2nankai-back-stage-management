<template>
<div>
    <div class="modules-box">
    	
    	
    	<div class="box-text">
			<el-form style="width:50%;display:inline-block;">
	    		<el-form-item>
	            	<el-select v-model="usertype" @change="usertypeChange(usertype)" placeholder="是否系统">
	                	<el-option
					      key="-1"
					      label="全部"
					      value="-1">
					    </el-option>
	                	<el-option
					      key="0"
					      label="是"
					      value="0">
					    </el-option>
					    <el-option
					      key="1"
					      label="否"
					      value="1">
					    </el-option>
					    
	               </el-select>
	            </el-form-item>
		   </el-form>
    		<el-form style="width:48%;display:inline-block;text-align:right">
	    		<el-form-item style="width:48%;display:inline-block;">
	                <el-input v-model="search" @change="searchValueChange(search)" placeholder="请输入参数名称，参数键名进行搜索" @keyup.enter.native="search" prefix-icon="el-icon-search"></el-input>
	            </el-form-item>
	            <el-form-item style="display:inline-block;">
	    		     <el-button type="primary" @click="searchfun">搜索</el-button>
	    		</el-form-item>
    		</el-form>
    	</div>
    	
    	<div style="text-align:right;padding-right:1.7%;margin-bottom:20px;">
    		  <el-button type="primary" @click="searchfun">删除</el-button>
    		   <el-button type="primary" @click="searchfun">新增</el-button>
	    </div>
    	
    	<div class="box-content" v-loading="loading">
    		  <tableList :checkBox="true" :tableData='paramSetingList' :pageNum="params.page" :pageSize="params.pageSize" :total="total" :columns="columns" @CurrentChange="handleCurrentChange" @selectionChange="handSelectionChange"></tableList>
	    </div>
    </div>     
</div>
</template>
<script>
	import API from '@/api/api_log';
	import tableList from '@/module/tableList.vue';
	import MyButton from '@/module/MyButton.vue';
	import {formatDate} from '@/assets/filter'
  export default {
    data() {
      return {
        user:{},
        params : {
            page: 1,
            pageSize: 10
        },
        time:'',
        usertype:'',
        total:0,
        search:'',
        strat:'',
        end:'',
        paramSetingList:[],
        loading:true,
        columns: [
          { prop: "logId", label: "序号" ,width:"60",order:true},
          { prop: "username", label: "用户名" },
          { prop: "startTime", label: "时间" ,
          	 render: function (h, params) {
		            return h('span', 
		            formatDate(new Date(parseInt(this.row.startTime)), 'yyyy-MM-dd hh:mm')
		     )}
          },
          { prop: "ip", label: "Ip" },
          { prop: "description", label: "信息"},
          { prop: "uri", label: "接口路径" },
          { prop: "coreName", label: "浏览器名称" },
          { prop: "deviceName", label: "设备类型" }
        ],
      }
    },
	filters:{
    formatDate(time){
        var data = new Date(time);
        return formatDate(data,'yyyy-MM-dd');
    }
   },
    components:{
          tableList,
          MyButton
    },
	mounted(){
    	this.user = JSON.parse(sessionStorage.getItem('user')).user;
        this.init();
    },
    methods: {
    	
    	
    	init(){
    		this.loading = true;
    		let promise={
    			pageSize:this.params.pageSize,
    			pageNum:this.params.page,
    			search:this.search,
    			strat:this.strat,
    			end:this.end
    		}
    		
    		console.log(promise)
	        API.log(promise).then((res)=>{
	        	console.log(res)
	    		if(res.code==1){
		       		this.logList = res.data;
		      	    this.total = res.total;
		      	    this.loading = false;
		        }else{
		        	this.$message({
			          title: '操作提示',
			          message: res.message, 
			          type: 'warning',
			        });
		        }
	        })
	    },
	    searchfun(){
    		this.params.page=1;
    		this.init();
    	},
    	searchValueChange(value){
    		this.search = value;
    	},
    	searchTime(){
    		let date1 = new Date(this.time[0]);  
    		this.strat=date1.getFullYear() + '-' + (date1.getMonth() + 1) + '-' + date1.getDate() + ' ' + date1.getHours() + ':' + date1.getMinutes() + ':' + date1.getSeconds();  
    		
    		let date2 = new Date(this.time[1]);  
    		this.end=date2.getFullYear() + '-' + (date2.getMonth() + 1) + '-' + date2.getDate() + ' ' + date2.getHours() + ':' + date2.getMinutes() + ':' + date2.getSeconds();  

    		console.log(this.strat,this.end)
    		this.params.page=1;
    		this.init();
    	},
    	
    	
        handleCurrentChange(val) {
	        this.params.page=val;
	        this.init();
        },
        handSelectionChange(selections){
        	console.log(selections);
        },
    }
  }
</script>

<style scoped>
li{list-style:none;}
.modules-box{
    border-radius: 5px;
    border-top:2px solid #942987;
    background-color:#fff;
    padding:30px 10px;
}
.box-content{padding:0 20px;}

</style>